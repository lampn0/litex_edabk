// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : de2_s005_rgbblink.v
// Device     : EP4CE115F29C7
// LiteX sha1 : a4cc859d
// Date       : 2022-05-18 08:46:26
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module de2_s005_rgbblink (
	output reg  user_led1,
	output reg  user_led2,
	output reg  user_led3,
	input  wire clk50
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  [31:0] __main___blink_r_counter = 32'd0;
reg  [31:0] __main___blink_g_counter = 32'd0;
reg  [31:0] __main___blink_b_counter = 32'd0;
wire sys_clk;
wire sys_rst;
wire por_clk;
reg  platform_int_rst = 1'd1;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign sys_clk = clk50;
assign por_clk = clk50;
assign sys_rst = platform_int_rst;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge por_clk) begin
	platform_int_rst <= 1'd0;
end

always @(posedge sys_clk) begin
	__main___blink_r_counter <= (__main___blink_r_counter + 1'd1);
	if ((__main___blink_r_counter == 26'd49999999)) begin
		__main___blink_r_counter <= 1'd0;
		user_led1 <= (~user_led1);
	end
	__main___blink_g_counter <= (__main___blink_g_counter + 1'd1);
	if ((__main___blink_g_counter == 25'd24999999)) begin
		__main___blink_g_counter <= 1'd0;
		user_led2 <= (~user_led2);
	end
	__main___blink_b_counter <= (__main___blink_b_counter + 1'd1);
	if ((__main___blink_b_counter == 24'd12499999)) begin
		__main___blink_b_counter <= 1'd0;
		user_led3 <= (~user_led3);
	end
	if (sys_rst) begin
		user_led1 <= 1'd0;
		__main___blink_r_counter <= 32'd0;
		user_led2 <= 1'd0;
		__main___blink_g_counter <= 32'd0;
		user_led3 <= 1'd0;
		__main___blink_b_counter <= 32'd0;
	end
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-05-18 08:46:26.
//------------------------------------------------------------------------------
